# Generated by Django 3.2.7 on 2021-10-11 08:53

import colorfield.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name="Ingredient's name")),
                ('measurement_unit', models.CharField(max_length=200, verbose_name='Measurement unit')),
            ],
            options={
                'verbose_name': 'Ingredients',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Amount of recipe ingredient')),
                ('ingredients', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredient', to='api.ingredients', verbose_name='Ingredient')),
            ],
            options={
                'verbose_name': 'Recipe ingredient',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name="Tag's name")),
                ('color', colorfield.fields.ColorField(default='#FFFFFF', max_length=7, verbose_name='Hex code for tag color')),
                ('slug', models.SlugField(max_length=200, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Tags',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Subscribes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscribe_on', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribe_on', to=settings.AUTH_USER_MODEL, verbose_name='subscribing user')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriber', to=settings.AUTH_USER_MODEL, verbose_name='subscriber')),
            ],
            options={
                'verbose_name': 'Follow',
            },
        ),
        migrations.CreateModel(
            name='ShoppingCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingredients', models.ManyToManyField(to='api.Ingredients', verbose_name='Ingredients for shopping card')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL, verbose_name="User's shopping card")),
            ],
            options={
                'verbose_name': 'Shopping card',
            },
        ),
        migrations.CreateModel(
            name='Recipes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name="Recipe's name")),
                ('text', models.TextField(verbose_name="Recipe's description")),
                ('cooking_time', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Time for cooking (in minutes)')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name="Recipe's author")),
                ('ingredients', models.ManyToManyField(through='api.RecipeIngredient', to='api.Ingredients')),
                ('tags', models.ManyToManyField(blank=True, to='api.Tags', verbose_name="Recipe's tags")),
            ],
            options={
                'verbose_name': 'Recipes',
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='recipeingredient',
            name='recipes',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe', to='api.recipes', verbose_name='Recipe'),
        ),
        migrations.CreateModel(
            name='Favorites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name="User's list of favorite recipes")),
                ('recipes', models.ManyToManyField(to='api.Recipes', verbose_name="User's favorites recipes")),
            ],
            options={
                'verbose_name': 'List of favorite recipes',
                'ordering': ('recipes__name',),
            },
        ),
        migrations.AddConstraint(
            model_name='subscribes',
            constraint=models.UniqueConstraint(fields=('subscriber', 'subscribe_on'), name='unique_subscribe'),
        ),
    ]
